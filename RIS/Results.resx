<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="Icons.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>132, 17</value>
  </metadata>
  <data name="Icons.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj00LjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACZTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5JbWFnZUxpc3RTdHJlYW1lcgEAAAAERGF0YQcCAgAAAAkDAAAADwMAAAAI
        EAAAAk1TRnQBSQFMAgEBAwEAASgBAAEoAQABEAEAARABAAT/ARkBAAj/AUIBTQE2BwABNgMAASgDAAFA
        AwABEAMAAQEBAAEYBgABDBIAAbIBsAHcATIBLAHCAS0BJwHBAS0BJwHBAS0BJwHBAT4BOQHFAXMBbwHT
        AY4BigHaAY4BigHaAXMBbwHTAT4BOQHFAS0BJwHBAS0BJwHBAS0BJwHBATIBLAHCAbMBsAHcDAAB9QH2
        AfUBuAHUAcIBeAHEAZYBUgG3AXcBUgG3AXcBeAHEAZYBuAHUAcMB9QH2AfVsAAEwASwBwgEtAScBwQEt
        AScBwQE/ATkBxQGsAakB4wHvAe0B8QHwAe8C8AHvAvAB7wLwAe8B8AHuAe0B8QGsAakB4wE/ATkBxQEt
        AScBwQEtAScBwQEyASwBwgYAA/4BuAHWAcQBOgG1AW0BMwG2AWkBMwG2AWkBMwG2AWkBMwG2AWkBMwG2
        AWkBMwG2AWkBOgG1AW0BuAHXAcQD/gYAA/8D+yT6A/sD/zAAAS0BJwHBAS0BJwHBAVEBTAHKAeEB3wLv
        Ae4B7wH0AfMB9AH2AfUB9gH3AfYC9wH2AfcB9gH1AfYB9AHzAfQB7wHuAe8B4QHfAe8BUQFMAcoBLQEn
        AcEBLQEnAcEDAAP+AZABzQGrATABuQFtATABuQFtATABuQFtATABuQFtATABuQFtATABuQFtATABuQFt
        ATABuQFtATABuQFtATABuQFtAZABzQGrA/4DAAGKAc8B3wEeAb0B4wEeAb0B5AEeAb0B5AEeAb0B5AEe
        Ab0B5AEeAb0B5AEeAb0B5AEeAb0B5AEeAb0B5AEeAb0B5AEeAb0B5AEeAb0B5AEeAb0B5AEeAb0B4wGK
        Ac8B4DAAAS0BJwHBAT8BOQHFAeEB3wHvAfAB7wHwAfYB9QH2AfcB9gH3AfMB8gH0AcsByQHlAcgBxgHi
        Ae4B7QHvAfYB9QL2AfUB9gHvAe4B7wHhAd8B7wE/ATkBxQEtAScBwQMAAbYB2AHGAS4BvQFxAS4BvQFx
        AS4BvQFxAS4BvQFxAS4BvQFxAS4BvQFxAS4BvQFxAS4BvQFxAS4BvQFxAS4BvQFxAS4BvQFxAS4BvQFx
        AbcB2QHHAwABHgHGAfEBHAHHAfIBGgHHAfIBGgHHAfIBGgHHAfIBGgHHAfIBGgHHAfIBGgHHAfIBGgHH
        AfIBGgHHAfIBGgHHAfIBGgHHAfIBGgHHAfIBGgHHAfIBHAHHAfIBHgHGAfEwAAEtAScBwQGsAakB4wHv
        Ae4B7wH2AfUB9gH3AfYB9wHlAeQB8QFVAVAByQEtAScBwQEtAScBwQFRAUwBxQHbAdoB5wH2AfUC9gH1
        AfYB7wHuAe8BrAGpAeMBLQEnAcEB9QL2ATMBwAF6ASwBwQF1ASwBwQF1ASwBwQF1ASwBwQF1ATYBwQF7
        AVYByAGOASwBwQF1ASwBwQF1ASwBwQF1ASwBwQF1ASwBwQF1ASwBwQF1ATMBwAF6AfUB9wH2AR4ByQHz
        AR4ByQHzARwByQH0ARwByQH0ARwByQH0ARwByQH0ARwByQH0ARwByQH0ARwByQH0ARwByQH0ARwByQH0
        ARwByQH0ARwByQH0ARwByQH0AR4ByQHzAR4ByQHzMAABPgE5AcUB7wHtAfEB9AHzAfQB9wH2AvcB9gH3
        AXoBdgHVAS0BJwHBATYBMQHCAToBNAHDAS0BJwHBAXABbAHLAfUB9AH1AfcB9gH3AfQB8wH0Ae4B7QHx
        AT4BOQHFAbUB2QHIASoBxAF6ASoBxAF6ASoBxAF6ASoBxAF6AU0BygGOAdsB8QHmAfoB/AH7AXIB0wGk
        ASoBxAF6ASoBxAF6ASoBxAF6ASoBxAF6ASoBxAF6ASoBxAF6AbUB2gHJAR4BywH1AR4BywH1AR4BywH1
        AR4BywH1AR4BywH1AR4BywH1AR4BywH1AR4BywH1AR4BywH1AR4BywH1AR4BywH1AR4BywH1AR4BywH1
        AR4BywH1AR4BywH1AR4BywH1MAABcwFvAdMB8AHvAfAB9gH1AfYB9wH2AvcB9gH3AU0BSAHJAS0BJwHB
        AWkBZQHMAXcBcwHTAS0BJwHBAUgBQwHEAfIB8QHyAfcB9gH3AfYB9QH2AfAB7wHwAXMBbwHTAXAB0wGl
        AScByAF+AScByAF+AScBxwF9AXUB1gGpAfQB+gH3Bv8B+wH9AfwBdwHXAaoBJwHIAX4BJwHIAX4BJwHI
        AX4BJwHIAX4BJwHIAX4BcAHTAaUBIAHMAfYBIAHMAfYBIAHMAfYBIAHMAfYBIAHMAfYBIAHMAfYBIAHM
        AfYBIAHMAfYBIAHMAfYBIAHMAfYBIAHMAfYBIAHMAfYBIAHMAfYBIAHMAfYBIAHMAfYBIAHMAfYwAAGO
        AYoB2wHwAe8B8AH3AfYC9wH2AvcB9gH3AWkBZAHRAS0BJwHBAUoBRAHEAU8BSgHHAS0BJwHBAWQBXwHL
        AfUB9AH1AfcB9gL3AfYB9wHwAe8B8AGOAYoB2wFFAc0BkAEmAcoBgQEmAcoBgQGUAeABvgP+A/8ByAHx
        Ad8BtwHuAdUD/wP9AX4B2gGwASYBygGBASYBygGBASYBygGBASYBygGBAUUBzQGQASMBzQH3ASMBzQH3
        ASEBzQH3ASEBzQH3ASEBzQH3ASEBzQH3ASEBzQH3ASEBzQH3ASEBzQH3ASEBzQH3ASEBzQH3ASEBzQH3
        ASEBzQH3ASEBzQH3ASEBzQH3ASEBzQH3MAABjgGKAdsB8AHvAfAB9wH2AvcB9gL3AfYB9wHSAdAB7QEu
        ASgBwQEtAScBwQEtAScBwQEtAScBwQHLAckB5gH3AfYC9wH2AvcB9gH3AfAB7wHwAY4BigHbAUMB0AGU
        ASQBzQGEASQBzQGEAVoB2QGiAfgB/QH7AZ0B6AHIAScBzQGFASYBzQGEAaYB6wHNA/8B/QL+AYUB3QG2
        ASQBzAGDASQBzQGEASQBzQGEAUMB0AGUASYBzQH3ASQBzQH3ASMBzgH4ASMBzgH4ASMBzgH4ASMBzgH4
        ASMBzgH4ASMBzgH4ASMBzgH4ASMBzgH4ASMBzgH4ASMBzgH4ASMBzgH4ASMBzgH4ASMBzgH4ASMBzgH4
        MAABcwFvAdMB8AHvAfAB9gH1AfYB9wH2AvcB9gH3AfYB9QH2AVEBTAHGAaEBngHfAaIBnwHgAVQBTwHK
        Ae4B7QHuAfcB9gL3AfYB9wH2AfUB9gHwAe8B8AFzAW8B0wFtAdoBrAEiAc8BhgEiAc8BhgEiAc8BhgE0
        AdMBkAEiAc8BhgEiAc8BhgEiAc8BhgEjAc8BhwGdAeoBygP/A/4BhgHgAboBIgHPAYYBIgHPAYYBbQHa
        AawBPgHCAfABJgHNAfgBJAHOAfgBJAHOAfgBJAHOAfgBJAHOAfgBJAHOAfgBJAHOAfgBJAHOAfgBJQHP
        AfkBJQHPAfkBJQHPAfkBJQHPAfkBJQHPAfkBJQHPAfkBJQHPAfkwAAE+ATkBxQHvAe4B8QH0AfMB9AH3
        AfYC9wH2AfcB9gH1AfYBVwFSAccB8AHvAfAB9gH1AfYBWgFWAcsB8AHvAfAB9wH2AvcB9gH3AfQB8wH0
        Ae8B7QHxAT4BOQHFAbMB3QHMASEB0QGJASEB0QGJASEB0QGJASEB0QGJASEB0QGJASEB0QGJASEB0QGJ
        ASEB0QGJASEB0QGKAZQB6QHHA/4BfAHkAboBIQHRAYkBIQHRAYkBswHgAc0BOwGlAekBHgGbAekBHAGc
        AekBHAGcAekBHAGcAekBHAGdAekBIAGrAe4BJQHKAfcBJgHPAfkBJwHQAfoBJwHQAfoBJwHQAfoBJwHQ
        AfoBJwHQAfoBJwHQAfoBJwHQAfowAAEtAScBwQGsAakB4wHvAe4B7wH2AfUB9gH3AfYC9wH2AfcBkAGM
        AdsBagFmAcoBbgFqAc0BjAGJAdcB9gH1AfYB9wH2AfcB9gH1AfYB7wHuAe8BrAGpAeMBLQEnAcEB9QH3
        AfYBJgHVAY8BHwHUAYwBHwHUAYwBHwHUAYwBHwHUAYwBHwHUAYwBHwHUAYwBHwHUAYwBHwHUAYwBHwHU
        AYwBRwHcAaEBHwHUAYwBHwHUAYwBJgHVAY8B9QH3AfYBRAGrAe4BIwGeAe4BJAGfAe8BIgGfAe8BIgGf
        Ae8BIgGfAe8BIgGfAe8BJAGpAfIBKAHQAfoBKAHRAfoBKQHRAfsBKQHRAfsBKQHRAfsBKQHRAfsBKwHR
        AfsBKwHRAfswAAEtAScBwQE/ATkBxQHhAd8E7wH2AfUB9gH3AfYB9wH2AfUB9gHXAdUB7gHXAdUB7gH2
        AfUB9gH3AfYB9wH2AfUB9gHwAe8B8AHhAd8B7wE/ATkBxQEtAScBwQMAAbMB4QHQAR0B1gGPAR0B1gGP
        AR0B1gGPAR0B1gGPAR0B1gGPAR0B1gGPAR0B1gGPAR0B1gGPAR0B1gGPAR0B1gGPAR0B1gGPAR0B1gGP
        AbMB4gHQAwABsgHUAeoBMQGmAfEBLQGkAfEBLQGkAfEBLQGkAfEBLQGkAfEBLQGkAfEBLQGlAfEBLQG9
        AfYBLgHRAfoBLAHSAfsBLAHTAfwBKgHTAfwBKgHTAfwBLAHSAfsBLgHSAfswAAEtAScBwQEtAScBwQFR
        AUwBygHhAd8C7wHuAe8B9AHzAfQB9gH1AfYB9wH2AvcB9gH3AfYB9QH2AfQB8wH0Ae8B7gHvAeEB3wHv
        AVEBTAHKAS0BJwHBAS0BJwHBAwAD/gGHAd4BvQEdAdcBkAEdAdcBkAEdAdcBkAEdAdcBkAEdAdcBkAEd
        AdcBkAEdAdcBkAEdAdcBkAEdAdcBkAEdAdcBkAGIAeABvgP+AwAY/wP+Aa8B4AHrATkB0gH3AS4B0gH4
        AS4B0gH4AS4B0gH4AS4B0gH4AZMB3gHwMAABMgEsAcIBLQEnAcEBLQEnAcEBPwE5AcUBrAGpAeMB7wHt
        AfEB8AHvAvAB7wLwAe8C8AHvAfAB7wHtAfEBrAGpAeMBPwE5AcUBLQEnAcEBLQEnAcEBMgEsAcIGAAP+
        AbIB4gHQASMB2QGVARwB2AGSARwB2AGSARwB2AGSARwB2AGSARwB2AGSARwB2AGSASMB2QGVAbIB4wHR
        A/4hAAP/A/0B+gL7AvoB+wL6BPsD/zAAAbMBsAHcATIBLAHCAS0BJwHBAS0BJwHBAS0BJwHBAT4BOQHF
        AXMBbwHTAY4BigHbAY4BigHaAXMBbwHTAT4BOQHFAS0BJwHBAS0BJwHBAS0BJwHBATIBLAHCAbMBsQHd
        DAAB9QH3AfYBsgHhAdABaAHgAbQBPAHbAaABPAHbAaABaAHgAbQBsgHiAdAB9QH3AfZsAAFCAU0BPgcA
        AT4DAAEoAwABQAMAARADAAEBAQABAQUAAYAXAAP/AwAB8AEPAv8EAAHAAQMGAAGAAQEGAAGAAQFGAAGA
        AQEGAAGAAQEGAAHAAQMB/wGABAAB8AEPAv8CAAs=
</value>
  </data>
  <metadata name="menuStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <metadata name="saveFileDialog1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>212, 17</value>
  </metadata>
  <metadata name="openFileDialog1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>348, 17</value>
  </metadata>
</root>